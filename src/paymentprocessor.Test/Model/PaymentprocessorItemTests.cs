/*
 * Payment Processor Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using paymentprocessor.Model;
using paymentprocessor.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace paymentprocessor.Test.Model
{
    /// <summary>
    ///  Class for testing PaymentprocessorItem
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PaymentprocessorItemTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PaymentprocessorItem
        //private PaymentprocessorItem instance;

        public PaymentprocessorItemTests()
        {
            // TODO uncomment below to create an instance of PaymentprocessorItem
            //instance = new PaymentprocessorItem();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PaymentprocessorItem
        /// </summary>
        [Fact]
        public void PaymentprocessorItemInstanceTest()
        {
            // TODO uncomment below to test "IsType" PaymentprocessorItem
            //Assert.IsType<PaymentprocessorItem>(instance);
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'ProductGrn'
        /// </summary>
        [Fact]
        public void ProductGrnTest()
        {
            // TODO unit test for the property 'ProductGrn'
        }

        /// <summary>
        /// Test the property 'QtyOrdered'
        /// </summary>
        [Fact]
        public void QtyOrderedTest()
        {
            // TODO unit test for the property 'QtyOrdered'
        }

        /// <summary>
        /// Test the property 'QtyCommitted'
        /// </summary>
        [Fact]
        public void QtyCommittedTest()
        {
            // TODO unit test for the property 'QtyCommitted'
        }

        /// <summary>
        /// Test the property 'UnitSalePrice'
        /// </summary>
        [Fact]
        public void UnitSalePriceTest()
        {
            // TODO unit test for the property 'UnitSalePrice'
        }

        /// <summary>
        /// Test the property 'UnitListPrice'
        /// </summary>
        [Fact]
        public void UnitListPriceTest()
        {
            // TODO unit test for the property 'UnitListPrice'
        }

        /// <summary>
        /// Test the property 'UnitBasePrice'
        /// </summary>
        [Fact]
        public void UnitBasePriceTest()
        {
            // TODO unit test for the property 'UnitBasePrice'
        }

        /// <summary>
        /// Test the property 'UnitVatAmount'
        /// </summary>
        [Fact]
        public void UnitVatAmountTest()
        {
            // TODO unit test for the property 'UnitVatAmount'
        }

        /// <summary>
        /// Test the property 'RowSalePrice'
        /// </summary>
        [Fact]
        public void RowSalePriceTest()
        {
            // TODO unit test for the property 'RowSalePrice'
        }

        /// <summary>
        /// Test the property 'RowListPrice'
        /// </summary>
        [Fact]
        public void RowListPriceTest()
        {
            // TODO unit test for the property 'RowListPrice'
        }

        /// <summary>
        /// Test the property 'RowVatAmount'
        /// </summary>
        [Fact]
        public void RowVatAmountTest()
        {
            // TODO unit test for the property 'RowVatAmount'
        }

        /// <summary>
        /// Test the property 'DiscountAmount'
        /// </summary>
        [Fact]
        public void DiscountAmountTest()
        {
            // TODO unit test for the property 'DiscountAmount'
        }

        /// <summary>
        /// Test the property 'RowBasePrice'
        /// </summary>
        [Fact]
        public void RowBasePriceTest()
        {
            // TODO unit test for the property 'RowBasePrice'
        }

        /// <summary>
        /// Test the property 'VatPercentage'
        /// </summary>
        [Fact]
        public void VatPercentageTest()
        {
            // TODO unit test for the property 'VatPercentage'
        }

        /// <summary>
        /// Test the property 'VatInaccurate'
        /// </summary>
        [Fact]
        public void VatInaccurateTest()
        {
            // TODO unit test for the property 'VatInaccurate'
        }

        /// <summary>
        /// Test the property 'VatCalculated'
        /// </summary>
        [Fact]
        public void VatCalculatedTest()
        {
            // TODO unit test for the property 'VatCalculated'
        }

        /// <summary>
        /// Test the property 'ProductName'
        /// </summary>
        [Fact]
        public void ProductNameTest()
        {
            // TODO unit test for the property 'ProductName'
        }

        /// <summary>
        /// Test the property 'ProductCode'
        /// </summary>
        [Fact]
        public void ProductCodeTest()
        {
            // TODO unit test for the property 'ProductCode'
        }

        /// <summary>
        /// Test the property 'ProductSku'
        /// </summary>
        [Fact]
        public void ProductSkuTest()
        {
            // TODO unit test for the property 'ProductSku'
        }

        /// <summary>
        /// Test the property 'ProductOptions'
        /// </summary>
        [Fact]
        public void ProductOptionsTest()
        {
            // TODO unit test for the property 'ProductOptions'
        }

        /// <summary>
        /// Test the property 'ProductImg'
        /// </summary>
        [Fact]
        public void ProductImgTest()
        {
            // TODO unit test for the property 'ProductImg'
        }

        /// <summary>
        /// Test the property 'ProductData'
        /// </summary>
        [Fact]
        public void ProductDataTest()
        {
            // TODO unit test for the property 'ProductData'
        }

        /// <summary>
        /// Test the property 'ShipmentInfoReference'
        /// </summary>
        [Fact]
        public void ShipmentInfoReferenceTest()
        {
            // TODO unit test for the property 'ShipmentInfoReference'
        }

        /// <summary>
        /// Test the property 'PromotionGrn'
        /// </summary>
        [Fact]
        public void PromotionGrnTest()
        {
            // TODO unit test for the property 'PromotionGrn'
        }

        /// <summary>
        /// Test the property 'ProductIsVirtual'
        /// </summary>
        [Fact]
        public void ProductIsVirtualTest()
        {
            // TODO unit test for the property 'ProductIsVirtual'
        }
    }
}
