/*
 * Payment Processor Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using paymentprocessor.Model;
using paymentprocessor.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace paymentprocessor.Test.Model
{
    /// <summary>
    ///  Class for testing PaymentprocessorAuthorizePaymentRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PaymentprocessorAuthorizePaymentRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PaymentprocessorAuthorizePaymentRequest
        //private PaymentprocessorAuthorizePaymentRequest instance;

        public PaymentprocessorAuthorizePaymentRequestTests()
        {
            // TODO uncomment below to create an instance of PaymentprocessorAuthorizePaymentRequest
            //instance = new PaymentprocessorAuthorizePaymentRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PaymentprocessorAuthorizePaymentRequest
        /// </summary>
        [Fact]
        public void PaymentprocessorAuthorizePaymentRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" PaymentprocessorAuthorizePaymentRequest
            //Assert.IsType<PaymentprocessorAuthorizePaymentRequest>(instance);
        }

        /// <summary>
        /// Test the property 'TenantId'
        /// </summary>
        [Fact]
        public void TenantIdTest()
        {
            // TODO unit test for the property 'TenantId'
        }

        /// <summary>
        /// Test the property 'Context'
        /// </summary>
        [Fact]
        public void ContextTest()
        {
            // TODO unit test for the property 'Context'
        }

        /// <summary>
        /// Test the property 'Code'
        /// </summary>
        [Fact]
        public void CodeTest()
        {
            // TODO unit test for the property 'Code'
        }

        /// <summary>
        /// Test the property 'Amount'
        /// </summary>
        [Fact]
        public void AmountTest()
        {
            // TODO unit test for the property 'Amount'
        }

        /// <summary>
        /// Test the property 'Currency'
        /// </summary>
        [Fact]
        public void CurrencyTest()
        {
            // TODO unit test for the property 'Currency'
        }

        /// <summary>
        /// Test the property 'AdditionalInfo'
        /// </summary>
        [Fact]
        public void AdditionalInfoTest()
        {
            // TODO unit test for the property 'AdditionalInfo'
        }
    }
}
